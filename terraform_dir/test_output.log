
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # yandex_compute_instance.grafana_monitor[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "grafana_monitor" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "user-data" = <<-EOT
                #cloud-config
                users:
                 - name: user
                   groups: sudo
                   shell: /bin/bash
                   sudo: ['ALL=(ALL) NOPASSWD:ALL']
                   ssh-authorized-keys:
                     - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDcH7j4SF46SDmkn9j/6x2r71Y8aKHeY5/zjB8P7Iq98o9pfMjUW+swJxBMabvVhr9/6zRXwJhkHp01WmVsG2wzoAa2XSs4EDiz3u40Cp1anMkBqRwqv+cbgxePRpm9SOHHkbn6cW6bxSNMg9q7+TvQQMGPPkLB1AGs1XKWFz7UjZAx4/plD8/HArCyseNypZktZ/KvSrBDtTXRGBt6YUFayvvyTWWIZLWmxn2CDsOBQzhcdTX+NbIU46LNgPEvLmWa7JbbTNN+dVyXhPDTgb6FJIfE2mhVlhtp9d6ozM2gxLkGD0PKEM7DNcUnDbE6nY7LVQ/CAk/hEhbliqZ7QNITght456ayPULiIl+rFP4ZCepPpVdQIsNG9c3RxmrdrngVJIoQpi+TEcPvmvq17b3Ry8EJfB5/UZrIgXH0WuJv5GIQrRjb3tpNuIRIFEIYxrWbBHN3WbZs52+x+jFmSouXGL17epjkjsAb+iArXGtphyBLSTeNY0obwpS7CN/1Cy0= adept@laboratury
            EOT
        }
      [32m+[0m[0m name                      = "grafana_monitor"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = "boot disk for grafana_monitor"
              [32m+[0m[0m image_id    = "fd8o41nbel1uqngk0op2"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 20
          [32m+[0m[0m cores         = 4
          [32m+[0m[0m memory        = 4
        }
    }

[1m  # yandex_compute_instance.nginx_server1[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "nginx_server1" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "user-data" = <<-EOT
                #cloud-config
                users:
                 - name: user
                   groups: sudo
                   shell: /bin/bash
                   sudo: ['ALL=(ALL) NOPASSWD:ALL']
                   ssh-authorized-keys:
                     - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDcH7j4SF46SDmkn9j/6x2r71Y8aKHeY5/zjB8P7Iq98o9pfMjUW+swJxBMabvVhr9/6zRXwJhkHp01WmVsG2wzoAa2XSs4EDiz3u40Cp1anMkBqRwqv+cbgxePRpm9SOHHkbn6cW6bxSNMg9q7+TvQQMGPPkLB1AGs1XKWFz7UjZAx4/plD8/HArCyseNypZktZ/KvSrBDtTXRGBt6YUFayvvyTWWIZLWmxn2CDsOBQzhcdTX+NbIU46LNgPEvLmWa7JbbTNN+dVyXhPDTgb6FJIfE2mhVlhtp9d6ozM2gxLkGD0PKEM7DNcUnDbE6nY7LVQ/CAk/hEhbliqZ7QNITght456ayPULiIl+rFP4ZCepPpVdQIsNG9c3RxmrdrngVJIoQpi+TEcPvmvq17b3Ry8EJfB5/UZrIgXH0WuJv5GIQrRjb3tpNuIRIFEIYxrWbBHN3WbZs52+x+jFmSouXGL17epjkjsAb+iArXGtphyBLSTeNY0obwpS7CN/1Cy0= adept@laboratury
            EOT
        }
      [32m+[0m[0m name                      = "nginx_server1"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = "boot disk for nginx_server1"
              [32m+[0m[0m image_id    = "fd8o41nbel1uqngk0op2"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 20
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 4
        }
    }

[1m  # yandex_compute_instance.nginx_server2[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "nginx_server2" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "user-data" = <<-EOT
                #cloud-config
                users:
                 - name: user
                   groups: sudo
                   shell: /bin/bash
                   sudo: ['ALL=(ALL) NOPASSWD:ALL']
                   ssh-authorized-keys:
                     - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDcH7j4SF46SDmkn9j/6x2r71Y8aKHeY5/zjB8P7Iq98o9pfMjUW+swJxBMabvVhr9/6zRXwJhkHp01WmVsG2wzoAa2XSs4EDiz3u40Cp1anMkBqRwqv+cbgxePRpm9SOHHkbn6cW6bxSNMg9q7+TvQQMGPPkLB1AGs1XKWFz7UjZAx4/plD8/HArCyseNypZktZ/KvSrBDtTXRGBt6YUFayvvyTWWIZLWmxn2CDsOBQzhcdTX+NbIU46LNgPEvLmWa7JbbTNN+dVyXhPDTgb6FJIfE2mhVlhtp9d6ozM2gxLkGD0PKEM7DNcUnDbE6nY7LVQ/CAk/hEhbliqZ7QNITght456ayPULiIl+rFP4ZCepPpVdQIsNG9c3RxmrdrngVJIoQpi+TEcPvmvq17b3Ry8EJfB5/UZrIgXH0WuJv5GIQrRjb3tpNuIRIFEIYxrWbBHN3WbZs52+x+jFmSouXGL17epjkjsAb+iArXGtphyBLSTeNY0obwpS7CN/1Cy0= adept@laboratury
            EOT
        }
      [32m+[0m[0m name                      = "nginx_server2"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-b"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = "boot disk for nginx_server1"
              [32m+[0m[0m image_id    = "fd8o41nbel1uqngk0op2"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 20
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 4
        }
    }

[1m  # yandex_compute_instance.promethmonitor[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "promethmonitor" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "user-data" = <<-EOT
                #cloud-config
                users:
                 - name: user
                   groups: sudo
                   shell: /bin/bash
                   sudo: ['ALL=(ALL) NOPASSWD:ALL']
                   ssh-authorized-keys:
                     - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDcH7j4SF46SDmkn9j/6x2r71Y8aKHeY5/zjB8P7Iq98o9pfMjUW+swJxBMabvVhr9/6zRXwJhkHp01WmVsG2wzoAa2XSs4EDiz3u40Cp1anMkBqRwqv+cbgxePRpm9SOHHkbn6cW6bxSNMg9q7+TvQQMGPPkLB1AGs1XKWFz7UjZAx4/plD8/HArCyseNypZktZ/KvSrBDtTXRGBt6YUFayvvyTWWIZLWmxn2CDsOBQzhcdTX+NbIU46LNgPEvLmWa7JbbTNN+dVyXhPDTgb6FJIfE2mhVlhtp9d6ozM2gxLkGD0PKEM7DNcUnDbE6nY7LVQ/CAk/hEhbliqZ7QNITght456ayPULiIl+rFP4ZCepPpVdQIsNG9c3RxmrdrngVJIoQpi+TEcPvmvq17b3Ry8EJfB5/UZrIgXH0WuJv5GIQrRjb3tpNuIRIFEIYxrWbBHN3WbZs52+x+jFmSouXGL17epjkjsAb+iArXGtphyBLSTeNY0obwpS7CN/1Cy0= adept@laboratury
            EOT
        }
      [32m+[0m[0m name                      = "promethmonitor"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = "boot disk for promethmonitor"
              [32m+[0m[0m image_id    = "fd8o41nbel1uqngk0op2"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 20
          [32m+[0m[0m cores         = 4
          [32m+[0m[0m memory        = 4
        }
    }

[1m  # yandex_lb_network_load_balancer.foo[0m will be created
[0m  [32m+[0m[0m resource "yandex_lb_network_load_balancer" "foo" {
      [32m+[0m[0m created_at          = (known after apply)
      [32m+[0m[0m deletion_protection = (known after apply)
      [32m+[0m[0m folder_id           = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m name                = "my-network-load-balancer"
      [32m+[0m[0m region_id           = (known after apply)
      [32m+[0m[0m type                = "external"

      [32m+[0m[0m attached_target_group {
          [32m+[0m[0m target_group_id = (known after apply)

          [32m+[0m[0m healthcheck {
              [32m+[0m[0m healthy_threshold   = 2
              [32m+[0m[0m interval            = 2
              [32m+[0m[0m name                = "http"
              [32m+[0m[0m timeout             = 1
              [32m+[0m[0m unhealthy_threshold = 2

              [32m+[0m[0m http_options {
                  [32m+[0m[0m path = "/"
                  [32m+[0m[0m port = 80
                }
            }
        }

      [32m+[0m[0m listener {
          [32m+[0m[0m name        = "my-listener"
          [32m+[0m[0m port        = 80
          [32m+[0m[0m protocol    = (known after apply)
          [32m+[0m[0m target_port = (known after apply)

          [32m+[0m[0m external_address_spec {
              [32m+[0m[0m address    = (known after apply)
              [32m+[0m[0m ip_version = "ipv4"
            }
        }
    }

[1m  # yandex_lb_target_group.tgtest[0m will be created
[0m  [32m+[0m[0m resource "yandex_lb_target_group" "tgtest" {
      [32m+[0m[0m created_at = (known after apply)
      [32m+[0m[0m folder_id  = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m name       = "tgtest"
      [32m+[0m[0m region_id  = (known after apply)

      [32m+[0m[0m target {
          [32m+[0m[0m address   = (known after apply)
          [32m+[0m[0m subnet_id = (known after apply)
        }
      [32m+[0m[0m target {
          [32m+[0m[0m address   = (known after apply)
          [32m+[0m[0m subnet_id = (known after apply)
        }
    }

[1m  # yandex_vpc_network.network1[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "network1" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "network1"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # yandex_vpc_subnet.subnet1[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet1" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnet1"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-a"
    }

[1m  # yandex_vpc_subnet.subnet2[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet2" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnet2"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.2.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-b"
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m grafana_moonitor_ip_pub = (known after apply)
  [32m+[0m[0m nginx_server1_ip_pub    = (known after apply)
  [32m+[0m[0m nginx_server2_ip_pub    = (known after apply)
  [32m+[0m[0m promethmonitor_ip_pub   = (known after apply)
[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
[0m[1myandex_vpc_network.network1: Creating...[0m[0m
[0m[1myandex_vpc_network.network1: Creation complete after 1s [id=enpjb8hfsi23mf11pjuk][0m
[0m[1myandex_vpc_subnet.subnet1: Creating...[0m[0m
[0m[1myandex_vpc_subnet.subnet2: Creating...[0m[0m
[0m[1myandex_vpc_subnet.subnet1: Creation complete after 1s [id=e9bgbo624jaivf3f3vb9][0m
[0m[1myandex_compute_instance.grafana_monitor: Creating...[0m[0m
[0m[1myandex_compute_instance.promethmonitor: Creating...[0m[0m
[0m[1myandex_compute_instance.nginx_server1: Creating...[0m[0m
[0m[1myandex_vpc_subnet.subnet2: Creation complete after 2s [id=e2lrouqjf95va1fm728u][0m
[0m[1myandex_compute_instance.nginx_server2: Creating...[0m[0m
[0m[1myandex_compute_instance.promethmonitor: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.promethmonitor: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.promethmonitor: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.promethmonitor: Creation complete after 34s [id=fhm0q2nd29dc61j7pmck][0m
